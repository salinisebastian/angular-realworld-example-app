{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-25T15:33:38.223Z",
    "end": "2021-03-25T15:34:13.057Z",
    "duration": 30382,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "59e497fa-8a8f-424c-bac3-67978cb71c2f",
      "title": "",
      "fullFile": "cypress\\integration\\first.spec.js",
      "file": "cypress\\integration\\first.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "784f75d1-e385-4454-941d-bec4e76ed05e",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 4572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"POST\", \"**/articles\").as(\"postArticles\");\ncy.contains(\" New Article \").click();\ncy.get('[placeholder=\"Article Title\"]').type(\"Article Title\");\ncy.get('[formcontrolname=\"description\"]').type(\"Nothing\");\ncy.get('[placeholder=\"Write your article (in markdown)\"]').type(\"Something\");\ncy.contains(\" Publish Article \").click();\ncy.wait(\"@postArticles\"); //console.log(@postArticles)\ncy.get(\"@postArticles\").then(function (xhr) {\n  console.log(xhr); // console.log(xhr.response.statusCode);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal(\"Something\");\n  expect(xhr.response.body.article.description).to.equal(\"Nothing\");\n});",
              "err": {},
              "uuid": "c1d249bf-e17c-4c01-9cf3-c98027529e5c",
              "parentUUID": "784f75d1-e385-4454-941d-bec4e76ed05e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 1993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"hello\", cy.get(\".tag-list\"));\ncy.get(\".tag-list\").should(\"contain\", \"cypress\").and(\"contain\", \"automation\").and(\"contain\", \"testing\");",
              "err": {},
              "uuid": "dc945c62-7fea-4225-aa2d-003e5de8a168",
              "parentUUID": "784f75d1-e385-4454-941d-bec4e76ed05e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 2223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"GET\", \"**/articles*\", {\n  fixture: \"articles.json\"\n});\ncy.intercept(\"GET\", \"**/articles/feed*\", '{\"articles\":[],\"articlesCount\":0}');\ncy.contains(\" Global Feed \").click();\ncy.get(\"app-article-list button\").then(function (listOfButtons) {\n  expect(listOfButtons[0]).to.contain(\"8\");\n});\ncy.fixture(\"articles\").then(function (file) {\n  var articleLink = file.articles[0].slug;\n  cy.intercept(\"POST\", \"**/articles/\" + articleLink + \"/favorite\", {\n    fixture: \"article0.json\"\n  }).as(\"postArticlesfavorite\");\n}); // the response is actually collected from the backend here not from the article0.json file.\ncy.get(\"app-article-list button\").eq(0).click().should(\"contain\", \"9\");\ncy.wait(\"@postArticlesfavorite\");\ncy.get(\"@postArticlesfavorite\").then(function (xhr) {\n  console.log(xhr); //the response is actually collected from the article0.json file\n  expect(xhr.response.body.article.favoritesCount).to.equal(99);\n  expect(xhr.response.statusCode).to.equal(200);\n});",
              "err": {},
              "uuid": "eeb4aaa0-1593-4e6e-b7aa-afe8011a4d24",
              "parentUUID": "784f75d1-e385-4454-941d-bec4e76ed05e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3583,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.intercept(\"POST\", \"**/articles\", (req) => {\n//   req.body.article.description = \"Nothing2\";\n// }).as(\"postArticles\");\n//Verifing the actual response and the mocked response\ncy.intercept(\"POST\", \"**/articles\", function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal(\"Nothing\");\n    res.body.article.description = \"Nothing2\";\n  });\n}).as(\"postArticles\");\ncy.contains(\" New Article \").click();\ncy.get('[placeholder=\"Article Title\"]').type(\"Check Test\");\ncy.get('[formcontrolname=\"description\"]').type(\"Nothing\");\ncy.get('[placeholder=\"Write your article (in markdown)\"]').type(\"Something\");\ncy.contains(\" Publish Article \").click();\ncy.wait(\"@postArticles\"); //console.log(@postArticles)\ncy.get(\"@postArticles\").then(function (xhr) {\n  console.log(xhr); // console.log(xhr.response.statusCode);\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal(\"Something\");\n  expect(xhr.response.body.article.description).to.equal(\"Nothing2\");\n});",
              "err": {},
              "uuid": "099bb46d-eb0c-423b-b858-837fbf1ccfc7",
              "parentUUID": "784f75d1-e385-4454-941d-bec4e76ed05e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1d249bf-e17c-4c01-9cf3-c98027529e5c",
            "dc945c62-7fea-4225-aa2d-003e5de8a168",
            "eeb4aaa0-1593-4e6e-b7aa-afe8011a4d24",
            "099bb46d-eb0c-423b-b858-837fbf1ccfc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c40518f8-1563-47b3-b01a-f107eee6351d",
      "title": "",
      "fullFile": "cypress\\integration\\secondTest.spec.js",
      "file": "cypress\\integration\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8943790b-cd5e-4b84-87dd-ee51a5e3220b",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 7648,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Settings\").click();\ncy.contains(\"Or click here to logout\").click();\ncy.get(\".navbar-nav\").should(\"contain\", \"Sign up6\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain 'Sign up6'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain 'Sign up6'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\integration\\secondTest.spec.js:106:27)",
                "diff": null
              },
              "uuid": "5a1f6354-eafc-4463-8fa9-1cb2ce2566f2",
              "parentUUID": "8943790b-cd5e-4b84-87dd-ee51a5e3220b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5a1f6354-eafc-4463-8fa9-1cb2ce2566f2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aace5974-2801-4e18-b973-96661558d625",
      "title": "",
      "fullFile": "cypress\\integration\\DeleteAPIwithTOKEN.spec.js",
      "file": "cypress\\integration\\DeleteAPIwithTOKEN.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d2af075-e137-4cba-b2ed-035a9a449f8d",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login",
              "fullTitle": "Test with backend login",
              "timedOut": null,
              "duration": 10363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var bodyRequest = {\n  article: {\n    tagList: [],\n    title: \"Hello from postman\",\n    description: \"this is description\",\n    body: \"this is body\"\n  }\n};\ncy.get(\"@token\").then(function (token) {\n  cy.request({\n    url: Cypress.env('apiUrl') + \"api/articles/\",\n    headers: {\n      Authorization: \"Token \" + token\n    },\n    method: \"POST\",\n    body: bodyRequest\n  }).then(function (response) {\n    expect(response.status).to.equal(200);\n  });\n  cy.contains(\"Global Feed\").click();\n  cy.get(\".article-preview\").first().click();\n  cy.get(\".article-actions\").contains(\"Delete Article\").click();\n  cy.request({\n    url: Cypress.env('apiUrl') + \"api/articles?limit=10&offset=0\",\n    headers: {\n      Authorization: \"Token \" + token\n    },\n    method: \"GET\"\n  }).its(\"body\").then(function (body) {\n    expect(body.articles[0].title).not.to.equal(\"Hello from postman\");\n  });\n});",
              "err": {},
              "uuid": "ec3fa4b6-20ab-44e0-988f-eb841bdbf00c",
              "parentUUID": "9d2af075-e137-4cba-b2ed-035a9a449f8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec3fa4b6-20ab-44e0-988f-eb841bdbf00c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}